#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define BASE 0
#define SYMB 1
#define FUNC 2
#define KP 3

&lt {
    tapping-term-ms = <300>;
};

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <300>;
          quick_tap_ms = <0>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    base_layer {
      bindings = <
        &kp ESC   &kp N1    &kp N2     &kp N3     &kp N4      &kp N5      &none                                                                                       &none     &kp N6      &kp N7      &kp N8     &kp N9     &kp N0   &kp EQUAL
        &kp TAB   &kp Q     &kp W      &kp E      &kp R       &kp T       &kp ESC                                                                                     &kp GRAVE &kp Y       &kp U       &kp I      &kp O      &kp P    &kp MINUS
        &kp LSHFT &kp A     &hm LALT S &hm LGUI D &hm LCTRL F &hm LSHFT G &kp TAB                          &kp LCTRL      &kp LALT &kp LGUI  &kp RCTRL                &kp TAB   &hm RSHFT H &hm RCTRL J &hm RGUI K &hm RALT L &kp SEMI &kp RSHFT
        &kp LGUI  &kp Z     &kp X      &kp C      &kp V       &kp B                                                       &kp HOME &kp PG_UP                                    &kp N       &kp M       &kp COMMA  &kp DOT    &kp FSLH &kp RGUI 
        &kp LCTRL &kp LALT  &kp HOME   &kp LEFT   &kp RIGHT                                  &lt SYMB BSPC &lt FUNC DEL   &kp END  &kp PG_DN &lt FUNCT ENTER &lt SYMB SPACE                 &kp UP      &kp DOWN   &kp END    &kp RALT &kp RCTRL
      >;
    };

    symb_layer {
      bindings = <
        &trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5    &kp F6                                             &kp F7 &kp F8    &kp F9    &kp F10   &kp F11   &kp F12   &none
        &none   &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT &trans                                             &trans &kp CARET &kp AMPS  &kp ASTRK &kp GRAVE &kp TILDE &none
        &none   &kp DQT  &kp LBRC &kp LBKT &kp LPAR &kp LT    &trans          &none  &none &none &none           &trans &kp FSLH  &kp MINUS &kp EQUAL &kp BSLH  &kp SEMI  &none
        &none   &kp SQT  &kp RBRC &kp RBKT &kp RPAR &kp GT                           &none &none                        &kp QMARK &kp UNDER &kp PLUS  &kp PIPE  &kp COLON &none
        &none   &none    &none    &none    &none                       &trans &none  &none &none &none &trans                     &none     &none     &none     &none     &none
      >;
    };

    func_layer {
      bindings = <
        &none &none &none &none &none &none &none                                      &none &none &none &none &none &none &none
        &none &none &none &none &none &none &none                                      &none &none &none &none &none &none &none
        &none &none &none &none &none &none &none        &none &none &none &none       &none &none &none &none &none &none &none
        &none &none &none &none &none &none                    &none &none                   &none &none &none &none &none &none
        &none &none &none &none &none              &none &none &none &none &none &none             &none &none &none &none &none
      >;
    };

  };
};
